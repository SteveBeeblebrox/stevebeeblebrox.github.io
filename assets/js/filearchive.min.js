class TarBuilder{static roundUp(e,t){if(0==t)return e;const r=e%t;return 0==r?e:e+t-r}static fixfp(e,t){return"/"===t?e:e.replaceAll(t,"/")}constructor(){this.bytes=new Uint8ClampedArray}add(e,t){this.bytes=new Uint8ClampedArray([this.bytes,this.createHeader(TarBuilder.fixfp(e,t.PATH_SEPERATOR),t),this.createBody(VFS.FileSystem.isFile(t)?new Uint8ClampedArray(t.read()):new Uint8ClampedArray(0))].flatMap((e=>[...e])))}createBody(e){return new Uint8ClampedArray(Object.assign([...e],{length:TarBuilder.roundUp(e.length,512)}))}createHeader(e,t,r=!1){VFS.assert(e.length<=100,`File name '${e}' must be no more than 100 characters`);const{Octal:a,ASCIIString:n}=TarBuilder,i=VFS.FileSystem.isFile(t);return i||e.endsWith("/")||(e+="/"),new Uint8ClampedArray(Object.assign([n(100,e),a(8,3072|parseInt(t.getPermissions().toString().repeat(3),8)),a(8),a(8),a(12,i?t.getContentSize():0),a(12,Math.floor(+t.getDateModified()/1e3)),r?n(8," ".repeat(8)):[...a(7,this.createHeader(e,t,!0).reduce(((e,t)=>e+t))),...n(1," ")],n(1,TarBuilder.FileType.NORMAL.toString()),n(100)].flatMap((e=>[...e])),{length:512}))}toBytes(e=Uint8ClampedArray){return new e([...this.bytes,...new Uint8ClampedArray(1024)])}static Octal(e,t=0){return new Uint8ClampedArray(TarBuilder.encode(`${t.toString(8).padStart(e-1,"0").slice(0,e-1)}\0`))}static ASCIIString(e,t=""){return new Uint8ClampedArray(Object.assign([...TarBuilder.encode(t).slice(0,e)],{length:e}))}}TarBuilder.encode=TextEncoder.prototype.encode.bind(new TextEncoder),function(e){let t;!function(e){e[e.NORMAL=0]="NORMAL",e[e.HARD_LINK=1]="HARD_LINK",e[e.SYM_LINK=2]="SYM_LINK"}(t=e.FileType||(e.FileType={}))}(TarBuilder||(TarBuilder={}));class TarReader{static chunk(e,t){return e.reduce(((e,r,a)=>{const n=Math.floor(a/t);return e[n]||(e[n]=[]),e[n].push(r),e}),[])}static fixfp(e,t){return"/"===t?e:e.replaceAll("/",t)}constructor(e){var t,r;this.dataEntries=[];const a=TarReader.chunk([...e],512).map((e=>new Uint8ClampedArray(e)));for(let n=0;n<2;n++)VFS.assert(!!(null===(r=null===(t=a.pop())||void 0===t?void 0:t.every)||void 0===r?void 0:r.call(t,(e=>0===e))),"Data does not end with two null blocks");for(let i=0;i<a.length;){let d=0;const s=a[i];function c(e){return s.slice(d,d+=e)}function l(e){const t=parseInt(TarReader.decode(c(e-1)),8);return c(1),t}function o(e){const t=c(e);return TarReader.decode(t.slice(0,t.indexOf(0)))}let u,p;i++;const h={header:{name:o(100),mode:l(8),owner:l(8),group:l(8),size:u=l(12),timestamp:new Date(1e3*l(12)),checksum:(p=l(7),o(1),p),type:o(1),link:o(100)},body:new Uint8ClampedArray(a.slice(i,i+=Math.ceil(u/512)).flatMap((e=>[...e])).slice(0,u))},y=(e,t)=>e+t,m=7;VFS.assert(h.header.checksum===s.reduce(y)-(new TextEncoder).encode(`${h.header.checksum.toString(8).padStart(m-1,"0").slice(0,m-1)}\0`).reduce(y)+7*" ".charCodeAt(0),"Header checksum does not match archived value"),this.dataEntries.push(h)}}entries(){return this.dataEntries}}TarReader.decode=TextDecoder.prototype.decode.bind(new TextDecoder);