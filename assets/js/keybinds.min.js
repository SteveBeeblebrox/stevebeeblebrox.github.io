class Keybinds{constructor(e=window){this.target=e,this.levels=Array.apply(null,{length:5}).map((e=>new Map)),this.onEvent=function(e){var n;if(Keybinds.COMMAND_KEYS.includes(e.key.toLowerCase()))return;const t=+e.ctrlKey+ +e.shiftKey+ +e.altKey+ +e.metaKey,s=null===(n=[...this.levels[t].entries()].find((function([n]){return(!n.ctrlKey||e.ctrlKey)&&(!n.shiftKey||e.shiftKey)&&(!n.altKey||e.altKey)&&(!n.metaKey||e.metaKey)&&n.char===e.key.replace(/^ $/,"Space").toLowerCase()})))||void 0===n?void 0:n[1];s&&(e.preventDefault(),s())}.bind(this),e.addEventListener("keydown",this.onEvent)}static on(e,n){return Keybinds.DEFAULT_INSTANCE.on(e,n)}on(e,n){var t;const s=e.split(/\s+[+,]?\s?/).map((e=>e.toLowerCase().replaceAll(/^ctrl$/g,Keybinds.CommandKeys.Control)));this.levels[Math.min(s.length-1,4)].set({ctrlKey:s.includes(Keybinds.CommandKeys.Control),shiftKey:s.includes(Keybinds.CommandKeys.Shift),altKey:s.includes(Keybinds.CommandKeys.Alt),metaKey:s.includes(Keybinds.CommandKeys.Meta)||s.includes(Keybinds.CommandKeys.Windows),char:null!==(t=s.find((e=>!Keybinds.COMMAND_KEYS_ARRAY.includes(e))))&&void 0!==t?t:(()=>{throw new Error(`Keybind '${e}' must contain a none command key`)})()},n)}detach(){this.target.removeEventListener("keydown",this.onEvent)}}Keybinds.CommandKeys=function(){let e;return function(e){e.Control="control",e.Shift="shift",e.Alt="alt",e.Meta="meta",e.Windows="windows"}(e||(e={})),e}(),Keybinds.DEFAULT_INSTANCE=new Keybinds,Keybinds.COMMAND_KEYS_ARRAY=Object.values(Keybinds.CommandKeys).filter((e=>"string"==typeof e)),Keybinds.COMMAND_KEYS=Keybinds.COMMAND_KEYS_ARRAY.filter((e=>e!=Keybinds.CommandKeys.Windows));