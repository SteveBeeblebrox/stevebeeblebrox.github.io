//See assets/js/elements.js for license info.
var Elements;!function(Elements){function Shadow(e,...t){const n=JSX.createElement("span");return n.attachShadow({mode:"open"}),n.shadowRoot.replaceChildren(...t),n}Elements.Shadow=Shadow,ElementFactory.define("select-menu",{connect(){let select,selectMenu=this;this.replaceChildren(select=JSX.createElement("select",null,this.children)),select.style.width=`${select.$self`option[hidden]`.value.length}ch`;const textLen=Math.max(...select.$$self`option`.$toArray().map(e=>e.textContent.length)),keybindLen=Math.max(...select.$$self`option[data-keybind]`.$toArray().map(e=>{var t;return(null!==(t=e.getAttribute("data-keybind"))&&void 0!==t?t:"").length}));$$it.$forEach(e=>{e.textContent=e.textContent.padEnd(textLen+2," ")+(e.hasAttribute("data-keybind")?`(${e.getAttribute("data-keybind")})`:"").padStart(keybindLen+2," ")}),select.$on("change",function(){var _a,_b,_c,_d;const value=select.value;select.value=select.$self`option[hidden]`.value;const keybind=null===(_b=null===(_a=$`option[value=${value}]`)||void 0===_a?void 0:_a.getAttribute)||void 0===_b?void 0:_b.call(_a,"data-keybind"),action=`${select.$self`option[hidden]`.value}.${value}`,actions=null!==(_c=eval(selectMenu.getAttribute("data-actions")))&&void 0!==_c?_c:new Map,keybindings=null!==(_d=eval(selectMenu.getAttribute("data-keybindings")))&&void 0!==_d?_d:new Map;keybind?keybindings.has(keybind)?keybindings.get(keybind)():console.warn("Unbound Keybind",keybind,"in menu for action",action):actions.has(action)?actions.get(action)():console.warn("Unbound Menu Action",action)})}})}(Elements||(Elements={}));