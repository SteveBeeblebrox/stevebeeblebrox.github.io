<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Abortion Ban Map</title>
        %{SCRIPTS}
        <style type="text/less">
            html {
                display: flex;
                margin: 0;
                padding: 0;
                height: 100vh;
                width: 100vw;
                body {
                    width: 100%;
                    background-color: whitesmoke;
                    color: #333;
                    font-family: Arial;
                    display: flex;
                    flex-direction: column;
                    justify-content: space-evenly;
                    padding: 1em;
                }
            }
            :root {
                --status-trigger: rgb(183, 8, 8);
                --status-banned: red;
                --status-unknown: rgb(143, 143, 143);
                --status-ok: rgb(0, 255, 98);
                --status-at-risk: rgb(246, 255, 0);
                --status-other: rgb(255, 56, 225);
            }
            svg {
                .dccircle {display:none;}
                .state > path {
                    cursor: pointer;
                    &:active {
                        cursor: grabbing;
                    }
                    &:hover {
                        filter: brightness(85%);
                    }
                    &.status-trigger {fill: var(--status-trigger);}
                    &.status-banned {fill: var(--status-banned);}
                    &,.status-unknown {fill: var(--status-unknown);}
                    &.status-ok {fill: var(--status-ok);}
                    &.status-at-risk {fill: var(--status-at-risk);}
                    &.status-other {fill: var(--status-other);}
                }
            }
            header {
                display: flex;
                justify-content: space-between;
                align-items: end;
                @media (max-width:600px) {
                    flex-direction: column;
                    align-items: start;
                }
                hgroup {
                    h2 {
                        font-size: small;
                    }
                }
                div {
                    user-select: none;
                    p {
                        margin-top: 0;
                        margin-bottom: 0;
                        text-indent: -2ch;
                        padding-left: 2ch;
                    }
                }
            }
        </style>
        <script %{TSMODULE}>
            function emit(data) {
                for(const [key, value] of Object.entries(data))
                    window[key] = value;
            }
            async function text(path) {
                try {
                    const result = await fetch(path);
                    return result.ok ? await result.text() : null;
                } catch(_) {
                    return null;
                }
            }
            const DATA = JSION.parse(await text('data.jsion'));
            const POSTAL_CODES = Object.fromEntries(Object.entries(JSION.parse(await text('states.jsion'))).map(p=>p.reverse()));
            
            emit({DATA,POSTAL_CODES});

            const $map = $`svg.usmap`
            $map.$$self`.state>path`.$forEach(function($state) {
                $state.dataset.name = $state.$self('title').textContent;
                $state.dataset.postalCode=$state.classList[0];
                $state.$self('title').textContent = `${$state.dataset.name} (${$state.dataset.postalCode.toUpperCase()})`;
                $state.classList.add(`status-${DATA[$state.dataset.postalCode]?.status?.replace(/ /g, '-') ?? 'unknown'}`);   
                $state.$on('click', function(event) {
                    titleState.set($state.dataset.name);
                    event.stopPropagation();
                }, {capture: true});
            })
            $map.$on('click', function() {
                titleState.set('Overview')
            });
        </script>
    </head>
    <body>
            %{
                map=''
                with open('apps/abortionbanmap/map.svg') as file:
                    map=file.read()
                map
            }
        
        <header>
            <script %{TS}>
                const titleState = JSX.createState('Overview')
                $ctx=<hgroup>
                        <h1>U.S. Abortion Ban Map | {titleState}</h1>
                        <h2>This is <em>not</em> legal advice. This map is a good starting point, but always do your own research to be sure.</h2>
                    </hgroup>
                titleState.connectCallback(v=>document.title=`U.S. Abortion Ban Map | ${v}`)
            </script>
            <script %{TS}>
                $ctx=<div>
                  {Object.entries({
                    trigger: 'Banned by trigger law',
                    banned: 'Banned',
                    unknown: 'Unknown, no data',
                    ok: 'Still Legal',
                    'at-risk': 'At risk of being banned',
                    other: 'Other, see notes'
                  }).map(([key,value])=><p><span style={`color:var(--status-${key});`}>&#x2B24;</span> {value}</p>)}
                </div>
              </script>
        </header>
    </body>
</html>