<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>File System</title>
        %{SCRIPTS}
        %{VFS_SCRIPTS}
    </head>
    <body>
        <script %{TS}>
            (async function() {
                const {FileSystem} = VFS;
                async function openFileSystem(name) {
                    try {
                        return VFS.FileSystem.fromObject(JSON.parse(await GZipCompression.unzip(window.localStorage.getItem(`vfs:${name}`) ?? '')));
                    } catch {
                        return VFS.FileSystem.new('/');
                    }
                }
                async function saveFileSystem(name, fs) {
                    window.localStorage.setItem(`vfs:${name}`, await GZipCompression.zip(JSON.stringify(fs.toObject())));
                }

                const fs = await openFileSystem('main');
                const {Directory, File, root} = fs.createInterface({homeDir: '/usr/webdev', unrestricted: true});
            
                if(root.typeof('usr') !== 'Directory') root.set('usr', Directory.new());
                if(root.typeof('usr/webdev') !== 'Directory') root.set('usr/webdev', Directory.new());
                if(root.typeof('usr/webdev/Hello.txt') !== 'File') {
                    const file = File.new();
                    file.write('Hello World!');
                    root.set('usr/webdev/Hello.txt', file);
                }

                if(root.typeof('usr/webdev/Hola.txt') !== 'File') {
                    const file = File.new();
                    file.write('Hola Mundo!');
                    root.set('usr/webdev/Hola.txt', file);
                }

                saveFileSystem('main', fs);

                (function f() {
                    saveFileSystem('main', fs);
                    requestIdleCallback(() => f());
                })();
                return {File, Directory, root};
            })().catch(e => console.error(e)).then(v => ({root, File, Directory} = v));
        </script>
    </body>
</html>